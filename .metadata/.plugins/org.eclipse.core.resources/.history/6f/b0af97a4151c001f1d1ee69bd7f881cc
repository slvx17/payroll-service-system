package com.lawencon.pss_app.service.impl;

import java.sql.Timestamp;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.lawencon.pss_app.constant.RoleEnum;
import com.lawencon.pss_app.dao.UserDao;
import com.lawencon.pss_app.dto.user.UserRegisReqDto;
import com.lawencon.pss_app.dto.user.UserRegisResDto;
import com.lawencon.pss_app.model.Role;
import com.lawencon.pss_app.model.User;
import com.lawencon.pss_app.service.UserService;

@Service
public class UserServiceImpl implements UserService {
	
	private UserDao userDAO;
    private PasswordEncoder encoder;

    public UserServiceImpl(UserDao userDAO, PasswordEncoder encoder){
    	this.userDAO = userDAO;
    	this.encoder = encoder;
    }

    
    @Override
	public Optional<User> getByEmail(String email){
        User user = userDAO.findByEmail(email);
        return Optional.ofNullable(user);
    }

    
    @Transactional
    @Override
    public UserRegisResDto createUser(UserRegisReqDto reqDto) {
        User newUser = new User();
        newUser.setUserName(reqDto.getName());
        newUser.setUserEmail(reqDto.getEmail());
        newUser.setUserPassword(encoder.encode(reqDto.getPassword()));

        Role role = new Role(RoleEnum.getById(reqDto.getRoleId()));  
        newUser.setRole(role);

        User createdBy = userDAO.findById(reqDto.getCreatedById());  
        newUser.setCreatedBy(createdBy);

        Timestamp curr = new Timestamp(System.currentTimeMillis());
        newUser.setCreatedAt(curr);
        
        newUser.setUserVersion(1);
        userDAO.create(newUser);

        return new UserRegisResDto("User created successfully!");
    }
}
